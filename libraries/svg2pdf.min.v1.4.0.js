/**
 * Modules in this bundle
 * @license
 *
 * svg2pdf.js:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: yFiles for HTML Support Team <yfileshtml@yworks.com>
 *   homepage: https://github.com/yWorks/svg2pdf.js#readme
 *   version: 1.4.0
 *
 * cssesc:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Mathias Bynens
 *   homepage: https://mths.be/cssesc
 *   version: 3.0.0
 *
 * font-family-papandreou:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Taro Hanamura <m@hanamurataro.com>
 *   homepage: https://github.com/hanamura/font-family
 *   version: 0.2.0-patch1
 *
 * svgpath:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   homepage: https://github.com/fontello/svgpath#readme
 *   version: 2.2.2
 *
 * This header is generated by licensify (https://github.com/twada/licensify)
 */
!(function(t) {
  if ('object' == typeof exports && 'undefined' != typeof module) module.exports = t()
  else if ('function' == typeof define && define.amd) define([], t)
  else {
    ;('undefined' != typeof window
      ? window
      : 'undefined' != typeof global
      ? global
      : 'undefined' != typeof self
      ? self
      : this
    ).svg2pdf = t()
  }
})(function() {
  return (function n(s, o, l) {
    function h(e, t) {
      if (!o[e]) {
        if (!s[e]) {
          var r = 'function' == typeof require && require
          if (!t && r) return r(e, !0)
          if (f) return f(e, !0)
          var a = new Error("Cannot find module '" + e + "'")
          throw ((a.code = 'MODULE_NOT_FOUND'), a)
        }
        var i = (o[e] = { exports: {} })
        s[e][0].call(
          i.exports,
          function(t) {
            return h(s[e][1][t] || t)
          },
          i,
          i.exports,
          n,
          s,
          o,
          l
        )
      }
      return o[e].exports
    }
    for (var f = 'function' == typeof require && require, t = 0; t < l.length; t++) h(l[t])
    return h
  })(
    {
      1: [
        function(t, e, r) {
          'use strict'
          function u(t, e) {
            'single' !=
              (e = (function(t, e) {
                if (!t) return e
                var r = {}
                for (var a in e) r[a] = d.call(t, a) ? t[a] : e[a]
                return r
              })(e, u.options)).quotes &&
              'double' != e.quotes &&
              (e.quotes = 'single')
            for (
              var r = 'double' == e.quotes ? '"' : "'",
                a = e.isIdentifier,
                i = t.charAt(0),
                n = '',
                s = 0,
                o = t.length;
              s < o;

            ) {
              var l = t.charAt(s++),
                h = l.charCodeAt(),
                f = void 0
              if (h < 32 || 126 < h) {
                if (55296 <= h && h <= 56319 && s < o) {
                  var c = t.charCodeAt(s++)
                  56320 == (64512 & c) ? (h = ((1023 & h) << 10) + (1023 & c) + 65536) : s--
                }
                f = '\\' + h.toString(16).toUpperCase() + ' '
              } else
                f = e.escapeEverything
                  ? p.test(l)
                    ? '\\' + l
                    : '\\' + h.toString(16).toUpperCase() + ' '
                  : /[\t\n\f\r\x0B]/.test(l)
                  ? '\\' + h.toString(16).toUpperCase() + ' '
                  : '\\' == l ||
                    (!a && (('"' == l && r == l) || ("'" == l && r == l))) ||
                    (a && x.test(l))
                  ? '\\' + l
                  : l
              n += f
            }
            return (
              a &&
                (/^-[-\d]/.test(n)
                  ? (n = '\\-' + n.slice(1))
                  : /\d/.test(i) && (n = '\\3' + i + ' ' + n.slice(1))),
              (n = n.replace(g, function(t, e, r) {
                return e && e.length % 2 ? t : (e || '') + r
              })),
              !a && e.wrap ? r + n + r : n
            )
          }
          var d = {}.hasOwnProperty,
            p = /[ -,\.\/:-@\[-\^`\{-~]/,
            x = /[ -,\.\/:-@\[\]\^`\{-~]/,
            g = /(^|\\+)?(\\[A-F0-9]{1,6})\x20(?![a-fA-F0-9\x20])/g
          ;(u.options = { escapeEverything: !1, isIdentifier: !1, quotes: 'single', wrap: !1 }),
            (u.version = '3.0.0'),
            (e.exports = u)
        },
        {}
      ],
      2: [
        function(t, e, r) {
          var l = /[a-z0-9_-]/i,
            h = /[\s\t]/,
            o = /[^a-z0-9_-]/i
          e.exports = {
            parse: function(t) {
              for (var e, r, a = !0, i = 0, n = '', s = 0, o = []; ; ) {
                if (((r = t[s]), 0 === i)) {
                  if (!r && a) break
                  if (!r && !a) throw new Error('Parse error')
                  if ('"' === r || "'" === r) (e = r), (a = !(i = 1))
                  else if (h.test(r));
                  else {
                    if (!l.test(r)) throw new Error('Parse error')
                    ;(a = !(i = 3)), s--
                  }
                } else if (1 === i) {
                  if (!r) throw new Error('Parse Error')
                  '\\' === r ? (i = 2) : r === e ? (o.push(n), (n = ''), (i = 4)) : (n += r)
                } else if (2 === i) {
                  if (r !== e && '\\' !== r) throw new Error('Parse error')
                  ;(n += r), (i = 1)
                } else if (3 === i) {
                  if (!r) {
                    o.push(n)
                    break
                  }
                  if (l.test(r)) n += r
                  else if (',' === r) o.push(n), (n = ''), (i = 0)
                  else {
                    if (!h.test(r)) throw new Error('Parse error')
                    i = 5
                  }
                } else if (5 === i) {
                  if (!r) {
                    o.push(n)
                    break
                  }
                  if (l.test(r)) (n += ' ' + r), (i = 3)
                  else if (',' === r) o.push(n), (n = ''), (i = 0)
                  else if (!h.test(r)) throw new Error('Parse error')
                } else if (4 === i) {
                  if (!r) break
                  if (',' === r) i = 0
                  else if (!h.test(r)) throw new Error('Parse error')
                }
                s++
              }
              return o
            },
            stringify: function(t, e) {
              var r = (e && e.quote) || '"'
              if ('"' !== r && "'" !== r) throw new Error('Quote must be `\'` or `"`')
              for (var a = new RegExp(r, 'g'), i = [], n = 0; n < t.length; ++n) {
                var s = t[n]
                o.test(s) && (s = r + (s = s.replace(/\\/g, '\\\\').replace(a, '\\' + r)) + r),
                  i.push(s)
              }
              return i.join(', ')
            }
          }
        },
        {}
      ],
      3: [
        function(t, e, r) {
          'use strict'
          e.exports = t('./lib/svgpath')
        },
        { './lib/svgpath': 8 }
      ],
      4: [
        function(t, e, r) {
          'use strict'
          var C = 2 * Math.PI
          function I(t, e, r, a) {
            var i = t * r + e * a
            return 1 < i && (i = 1), i < -1 && (i = -1), (t * a - e * r < 0 ? -1 : 1) * Math.acos(i)
          }
          e.exports = function(t, e, r, a, i, n, s, o, l) {
            var h = Math.sin((l * C) / 360),
              f = Math.cos((l * C) / 360),
              c = (f * (t - r)) / 2 + (h * (e - a)) / 2,
              u = (-h * (t - r)) / 2 + (f * (e - a)) / 2
            if (0 == c && 0 == u) return []
            if (0 === s || 0 === o) return []
            ;(s = Math.abs(s)), (o = Math.abs(o))
            var d = (c * c) / (s * s) + (u * u) / (o * o)
            1 < d && ((s *= Math.sqrt(d)), (o *= Math.sqrt(d)))
            var p,
              x,
              g,
              v,
              m,
              b,
              y,
              k = (function(t, e, r, a, i, n, s, o, l, h) {
                var f = (h * (t - r)) / 2 + (l * (e - a)) / 2,
                  c = (-l * (t - r)) / 2 + (h * (e - a)) / 2,
                  u = s * s,
                  d = o * o,
                  p = f * f,
                  x = c * c,
                  g = u * d - u * x - d * p
                g < 0 && (g = 0), (g /= u * x + d * p)
                var v = (((g = Math.sqrt(g) * (i === n ? -1 : 1)) * s) / o) * c,
                  m = ((g * -o) / s) * f,
                  b = h * v - l * m + (t + r) / 2,
                  y = l * v + h * m + (e + a) / 2,
                  k = (f - v) / s,
                  w = (c - m) / o,
                  M = (-f - v) / s,
                  A = (-c - m) / o,
                  S = I(1, 0, k, w),
                  F = I(k, w, M, A)
                return 0 === n && 0 < F && (F -= C), 1 === n && F < 0 && (F += C), [b, y, S, F]
              })(t, e, r, a, i, n, s, o, h, f),
              w = [],
              M = k[2],
              A = k[3],
              S = Math.max(Math.ceil(Math.abs(A) / (C / 4)), 1)
            A /= S
            for (var F = 0; F < S; F++)
              w.push(
                ((p = M),
                (x = A),
                void 0,
                (g = (4 / 3) * Math.tan(x / 4)),
                (v = Math.cos(p)),
                (m = Math.sin(p)),
                (b = Math.cos(p + x)),
                (y = Math.sin(p + x)),
                [v, m, v - m * g, m + v * g, b + y * g, y - b * g, b, y])
              ),
                (M += A)
            return w.map(function(t) {
              for (var e = 0; e < t.length; e += 2) {
                var r = t[e + 0],
                  a = t[e + 1],
                  i = f * (r *= s) - h * (a *= o),
                  n = h * r + f * a
                ;(t[e + 0] = i + k[0]), (t[e + 1] = n + k[1])
              }
              return t
            })
          }
        },
        {}
      ],
      5: [
        function(t, e, r) {
          'use strict'
          var c = 1e-10,
            u = Math.PI / 180
          function a(t, e, r) {
            if (!(this instanceof a)) return new a(t, e, r)
            ;(this.rx = t), (this.ry = e), (this.ax = r)
          }
          ;(a.prototype.transform = function(t) {
            var e = Math.cos(this.ax * u),
              r = Math.sin(this.ax * u),
              a = [
                this.rx * (t[0] * e + t[2] * r),
                this.rx * (t[1] * e + t[3] * r),
                this.ry * (-t[0] * r + t[2] * e),
                this.ry * (-t[1] * r + t[3] * e)
              ],
              i = a[0] * a[0] + a[2] * a[2],
              n = a[1] * a[1] + a[3] * a[3],
              s =
                ((a[0] - a[3]) * (a[0] - a[3]) + (a[2] + a[1]) * (a[2] + a[1])) *
                ((a[0] + a[3]) * (a[0] + a[3]) + (a[2] - a[1]) * (a[2] - a[1])),
              o = (i + n) / 2
            if (s < c * o) return (this.rx = this.ry = Math.sqrt(o)), (this.ax = 0), this
            var l = a[0] * a[1] + a[2] * a[3],
              h = o + (s = Math.sqrt(s)) / 2,
              f = o - s / 2
            return (
              (this.ax =
                Math.abs(l) < c && Math.abs(h - n) < c
                  ? 90
                  : (180 * Math.atan(Math.abs(l) > Math.abs(h - n) ? (h - i) / l : l / (h - n))) /
                    Math.PI),
              0 <= this.ax
                ? ((this.rx = Math.sqrt(h)), (this.ry = Math.sqrt(f)))
                : ((this.ax += 90), (this.rx = Math.sqrt(f)), (this.ry = Math.sqrt(h))),
              this
            )
          }),
            (a.prototype.isDegenerate = function() {
              return this.rx < c * this.ry || this.ry < c * this.rx
            }),
            (e.exports = a)
        },
        {}
      ],
      6: [
        function(t, e, r) {
          'use strict'
          function a() {
            if (!(this instanceof a)) return new a()
            ;(this.queue = []), (this.cache = null)
          }
          ;(a.prototype.matrix = function(t) {
            return (
              (1 === t[0] && 0 === t[1] && 0 === t[2] && 1 === t[3] && 0 === t[4] && 0 === t[5]) ||
                ((this.cache = null), this.queue.push(t)),
              this
            )
          }),
            (a.prototype.translate = function(t, e) {
              return (
                (0 === t && 0 === e) || ((this.cache = null), this.queue.push([1, 0, 0, 1, t, e])),
                this
              )
            }),
            (a.prototype.scale = function(t, e) {
              return (
                (1 === t && 1 === e) || ((this.cache = null), this.queue.push([t, 0, 0, e, 0, 0])),
                this
              )
            }),
            (a.prototype.rotate = function(t, e, r) {
              var a, i, n
              return (
                0 !== t &&
                  (this.translate(e, r),
                  (a = (t * Math.PI) / 180),
                  (i = Math.cos(a)),
                  (n = Math.sin(a)),
                  this.queue.push([i, n, -n, i, 0, 0]),
                  (this.cache = null),
                  this.translate(-e, -r)),
                this
              )
            }),
            (a.prototype.skewX = function(t) {
              return (
                0 !== t &&
                  ((this.cache = null),
                  this.queue.push([1, 0, Math.tan((t * Math.PI) / 180), 1, 0, 0])),
                this
              )
            }),
            (a.prototype.skewY = function(t) {
              return (
                0 !== t &&
                  ((this.cache = null),
                  this.queue.push([1, Math.tan((t * Math.PI) / 180), 0, 1, 0, 0])),
                this
              )
            }),
            (a.prototype.toArray = function() {
              if (this.cache) return this.cache
              if (!this.queue.length) return (this.cache = [1, 0, 0, 1, 0, 0]), this.cache
              if (((this.cache = this.queue[0]), 1 === this.queue.length)) return this.cache
              for (var t = 1; t < this.queue.length; t++)
                this.cache =
                  ((e = this.cache),
                  (r = this.queue[t]),
                  [
                    e[0] * r[0] + e[2] * r[1],
                    e[1] * r[0] + e[3] * r[1],
                    e[0] * r[2] + e[2] * r[3],
                    e[1] * r[2] + e[3] * r[3],
                    e[0] * r[4] + e[2] * r[5] + e[4],
                    e[1] * r[4] + e[3] * r[5] + e[5]
                  ])
              var e, r
              return this.cache
            }),
            (a.prototype.calc = function(t, e, r) {
              var a
              return this.queue.length
                ? (this.cache || (this.cache = this.toArray()),
                  [
                    t * (a = this.cache)[0] + e * a[2] + (r ? 0 : a[4]),
                    t * a[1] + e * a[3] + (r ? 0 : a[5])
                  ])
                : [t, e]
            }),
            (e.exports = a)
        },
        {}
      ],
      7: [
        function(t, e, r) {
          'use strict'
          var s = { a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0 },
            a = [
              5760,
              6158,
              8192,
              8193,
              8194,
              8195,
              8196,
              8197,
              8198,
              8199,
              8200,
              8201,
              8202,
              8239,
              8287,
              12288,
              65279
            ]
          function h(t) {
            return 48 <= t && t <= 57
          }
          function i(t) {
            ;(this.index = 0),
              (this.path = t),
              (this.max = t.length),
              (this.result = []),
              (this.param = 0),
              (this.err = ''),
              (this.segmentStart = 0),
              (this.data = [])
          }
          function o(t) {
            for (
              ;
              t.index < t.max &&
              (10 === (e = t.path.charCodeAt(t.index)) ||
                13 === e ||
                8232 === e ||
                8233 === e ||
                32 === e ||
                9 === e ||
                11 === e ||
                12 === e ||
                160 === e ||
                (5760 <= e && 0 <= a.indexOf(e)));

            )
              t.index++
            var e
          }
          function l(t) {
            var e,
              r = t.index,
              a = r,
              i = t.max,
              n = !1,
              s = !1,
              o = !1,
              l = !1
            if (i <= a) t.err = 'SvgPath: missed param (at pos ' + a + ')'
            else if (
              ((43 !== (e = t.path.charCodeAt(a)) && 45 !== e) ||
                (e = ++a < i ? t.path.charCodeAt(a) : 0),
              h(e) || 46 === e)
            ) {
              if (46 !== e) {
                if (
                  ((n = 48 === e),
                  (e = ++a < i ? t.path.charCodeAt(a) : 0),
                  n && a < i && e && h(e))
                )
                  return void (t.err =
                    'SvgPath: numbers started with `0` such as `09` are ilegal (at pos ' + r + ')')
                for (; a < i && h(t.path.charCodeAt(a)); ) a++, (s = !0)
                e = a < i ? t.path.charCodeAt(a) : 0
              }
              if (46 === e) {
                for (l = !0, a++; h(t.path.charCodeAt(a)); ) a++, (o = !0)
                e = a < i ? t.path.charCodeAt(a) : 0
              }
              if (101 === e || 69 === e) {
                if (l && !s && !o)
                  return void (t.err = 'SvgPath: invalid float exponent (at pos ' + a + ')')
                if (
                  ((43 !== (e = ++a < i ? t.path.charCodeAt(a) : 0) && 45 !== e) || a++,
                  !(a < i && h(t.path.charCodeAt(a))))
                )
                  return void (t.err = 'SvgPath: invalid float exponent (at pos ' + a + ')')
                for (; a < i && h(t.path.charCodeAt(a)); ) a++
              }
              ;(t.index = a), (t.param = parseFloat(t.path.slice(r, a)) + 0)
            } else t.err = 'SvgPath: param should start with 0..9 or `.` (at pos ' + a + ')'
          }
          function f(t) {
            var e, r
            r = (e = t.path[t.segmentStart]).toLowerCase()
            var a = t.data
            if (
              ('m' === r &&
                2 < a.length &&
                (t.result.push([e, a[0], a[1]]),
                (a = a.slice(2)),
                (r = 'l'),
                (e = 'm' === e ? 'l' : 'L')),
              'r' === r)
            )
              t.result.push([e].concat(a))
            else for (; a.length >= s[r] && (t.result.push([e].concat(a.splice(0, s[r]))), s[r]); );
          }
          function n(t) {
            var e,
              r,
              a,
              i = t.max
            if (
              ((t.segmentStart = t.index),
              (function(t) {
                switch (32 | t) {
                  case 109:
                  case 122:
                  case 108:
                  case 104:
                  case 118:
                  case 99:
                  case 115:
                  case 113:
                  case 116:
                  case 97:
                  case 114:
                    return !0
                }
                return !1
              })(t.path.charCodeAt(t.index)))
            )
              if (((r = s[t.path[t.index].toLowerCase()]), t.index++, o(t), (t.data = []), r)) {
                for (e = !1; ; ) {
                  for (a = r; 0 < a; a--) {
                    if ((l(t), t.err.length)) return
                    t.data.push(t.param),
                      o(t),
                      (e = !1),
                      t.index < i &&
                        44 === t.path.charCodeAt(t.index) &&
                        (t.index++, o(t), (e = !0))
                  }
                  if (!e) {
                    if (t.index >= t.max) break
                    if (
                      !(
                        (48 <= (n = t.path.charCodeAt(t.index)) && n <= 57) ||
                        43 === n ||
                        45 === n ||
                        46 === n
                      )
                    )
                      break
                  }
                }
                var n
                f(t)
              } else f(t)
            else t.err = 'SvgPath: bad command ' + t.path[t.index] + ' (at pos ' + t.index + ')'
          }
          e.exports = function(t) {
            var e = new i(t),
              r = e.max
            for (o(e); e.index < r && !e.err.length; ) n(e)
            return (
              e.err.length
                ? (e.result = [])
                : e.result.length &&
                  ('mM'.indexOf(e.result[0][0]) < 0
                    ? ((e.err = 'SvgPath: string should start with `M` or `m`'), (e.result = []))
                    : (e.result[0][0] = 'M')),
              { err: e.err, segments: e.result }
            )
          }
        },
        {}
      ],
      8: [
        function(t, e, r) {
          'use strict'
          var a = t('./path_parse'),
            i = t('./transform_parse'),
            n = t('./matrix'),
            h = t('./a2c'),
            d = t('./ellipse')
          function s(t) {
            if (!(this instanceof s)) return new s(t)
            var e = a(t)
            ;(this.segments = e.segments), (this.err = e.err), (this.__stack = [])
          }
          ;(s.prototype.__matrix = function(f) {
            var c,
              u = this
            f.queue.length &&
              this.iterate(function(t, e, r, a) {
                var i, n, s, o
                switch (t[0]) {
                  case 'v':
                    n = 0 === (i = f.calc(0, t[1], !0))[0] ? ['v', i[1]] : ['l', i[0], i[1]]
                    break
                  case 'V':
                    n =
                      (i = f.calc(r, t[1], !1))[0] === f.calc(r, a, !1)[0]
                        ? ['V', i[1]]
                        : ['L', i[0], i[1]]
                    break
                  case 'h':
                    n = 0 === (i = f.calc(t[1], 0, !0))[1] ? ['h', i[0]] : ['l', i[0], i[1]]
                    break
                  case 'H':
                    n =
                      (i = f.calc(t[1], a, !1))[1] === f.calc(r, a, !1)[1]
                        ? ['H', i[0]]
                        : ['L', i[0], i[1]]
                    break
                  case 'a':
                  case 'A':
                    var l = f.toArray(),
                      h = d(t[1], t[2], t[3]).transform(l)
                    if (
                      (l[0] * l[3] - l[1] * l[2] < 0 && (t[5] = t[5] ? '0' : '1'),
                      (i = f.calc(t[6], t[7], 'a' === t[0])),
                      ('A' === t[0] && t[6] === r && t[7] === a) ||
                        ('a' === t[0] && 0 === t[6] && 0 === t[7]))
                    ) {
                      n = ['a' === t[0] ? 'l' : 'L', i[0], i[1]]
                      break
                    }
                    n = h.isDegenerate()
                      ? ['a' === t[0] ? 'l' : 'L', i[0], i[1]]
                      : [t[0], h.rx, h.ry, h.ax, t[4], t[5], i[0], i[1]]
                    break
                  case 'm':
                    ;(o = 0 < e), (n = ['m', (i = f.calc(t[1], t[2], o))[0], i[1]])
                    break
                  default:
                    for (n = [(s = t[0])], o = s.toLowerCase() === s, c = 1; c < t.length; c += 2)
                      (i = f.calc(t[c], t[c + 1], o)), n.push(i[0], i[1])
                }
                u.segments[e] = n
              }, !0)
          }),
            (s.prototype.__evaluateStack = function() {
              var t, e
              if (this.__stack.length) {
                if (1 === this.__stack.length)
                  return this.__matrix(this.__stack[0]), void (this.__stack = [])
                for (t = n(), e = this.__stack.length; 0 <= --e; )
                  t.matrix(this.__stack[e].toArray())
                this.__matrix(t), (this.__stack = [])
              }
            }),
            (s.prototype.toString = function() {
              var t,
                e,
                r = []
              this.__evaluateStack()
              for (var a = 0; a < this.segments.length; a++)
                (e = this.segments[a][0]),
                  (t = 0 < a && 'm' !== e && 'M' !== e && e === this.segments[a - 1][0]),
                  (r = r.concat(t ? this.segments[a].slice(1) : this.segments[a]))
              return r
                .join(' ')
                .replace(/ ?([achlmqrstvz]) ?/gi, '$1')
                .replace(/ \-/g, '-')
                .replace(/zm/g, 'z m')
            }),
            (s.prototype.translate = function(t, e) {
              return this.__stack.push(n().translate(t, e || 0)), this
            }),
            (s.prototype.scale = function(t, e) {
              return this.__stack.push(n().scale(t, e || 0 === e ? e : t)), this
            }),
            (s.prototype.rotate = function(t, e, r) {
              return this.__stack.push(n().rotate(t, e || 0, r || 0)), this
            }),
            (s.prototype.skewX = function(t) {
              return this.__stack.push(n().skewX(t)), this
            }),
            (s.prototype.skewY = function(t) {
              return this.__stack.push(n().skewY(t)), this
            }),
            (s.prototype.matrix = function(t) {
              return this.__stack.push(n().matrix(t)), this
            }),
            (s.prototype.transform = function(t) {
              return t.trim() && this.__stack.push(i(t)), this
            }),
            (s.prototype.round = function(a) {
              var e,
                i = 0,
                n = 0,
                s = 0,
                o = 0
              return (
                (a = a || 0),
                this.__evaluateStack(),
                this.segments.forEach(function(r) {
                  var t = r[0].toLowerCase() === r[0]
                  switch (r[0]) {
                    case 'H':
                    case 'h':
                      return (
                        t && (r[1] += s),
                        (s = r[1] - r[1].toFixed(a)),
                        void (r[1] = +r[1].toFixed(a))
                      )
                    case 'V':
                    case 'v':
                      return (
                        t && (r[1] += o),
                        (o = r[1] - r[1].toFixed(a)),
                        void (r[1] = +r[1].toFixed(a))
                      )
                    case 'Z':
                    case 'z':
                      return (s = i), void (o = n)
                    case 'M':
                    case 'm':
                      return (
                        t && ((r[1] += s), (r[2] += o)),
                        (s = r[1] - r[1].toFixed(a)),
                        (o = r[2] - r[2].toFixed(a)),
                        (i = s),
                        (n = o),
                        (r[1] = +r[1].toFixed(a)),
                        void (r[2] = +r[2].toFixed(a))
                      )
                    case 'A':
                    case 'a':
                      return (
                        t && ((r[6] += s), (r[7] += o)),
                        (s = r[6] - r[6].toFixed(a)),
                        (o = r[7] - r[7].toFixed(a)),
                        (r[1] = +r[1].toFixed(a)),
                        (r[2] = +r[2].toFixed(a)),
                        (r[3] = +r[3].toFixed(a + 2)),
                        (r[6] = +r[6].toFixed(a)),
                        void (r[7] = +r[7].toFixed(a))
                      )
                    default:
                      return (
                        (e = r.length),
                        t && ((r[e - 2] += s), (r[e - 1] += o)),
                        (s = r[e - 2] - r[e - 2].toFixed(a)),
                        (o = r[e - 1] - r[e - 1].toFixed(a)),
                        void r.forEach(function(t, e) {
                          e && (r[e] = +r[e].toFixed(a))
                        })
                      )
                  }
                }),
                this
              )
            }),
            (s.prototype.iterate = function(i, t) {
              var e,
                r,
                a,
                n = this.segments,
                s = {},
                o = !1,
                l = 0,
                h = 0,
                f = 0,
                c = 0
              if (
                (t || this.__evaluateStack(),
                n.forEach(function(t, e) {
                  var r = i(t, e, l, h)
                  Array.isArray(r) && ((s[e] = r), (o = !0))
                  var a = t[0] === t[0].toLowerCase()
                  switch (t[0]) {
                    case 'm':
                    case 'M':
                      return (
                        (l = t[1] + (a ? l : 0)), (h = t[2] + (a ? h : 0)), (f = l), void (c = h)
                      )
                    case 'h':
                    case 'H':
                      return void (l = t[1] + (a ? l : 0))
                    case 'v':
                    case 'V':
                      return void (h = t[1] + (a ? h : 0))
                    case 'z':
                    case 'Z':
                      return (l = f), void (h = c)
                    default:
                      ;(l = t[t.length - 2] + (a ? l : 0)), (h = t[t.length - 1] + (a ? h : 0))
                  }
                }),
                !o)
              )
                return this
              for (a = [], e = 0; e < n.length; e++)
                if (void 0 !== s[e]) for (r = 0; r < s[e].length; r++) a.push(s[e][r])
                else a.push(n[e])
              return (this.segments = a), this
            }),
            (s.prototype.abs = function() {
              return (
                this.iterate(function(t, e, r, a) {
                  var i,
                    n = t[0],
                    s = n.toUpperCase()
                  if (n !== s)
                    switch (((t[0] = s), n)) {
                      case 'v':
                        return void (t[1] += a)
                      case 'a':
                        return (t[6] += r), void (t[7] += a)
                      default:
                        for (i = 1; i < t.length; i++) t[i] += i % 2 ? r : a
                    }
                }, !0),
                this
              )
            }),
            (s.prototype.rel = function() {
              return (
                this.iterate(function(t, e, r, a) {
                  var i,
                    n = t[0],
                    s = n.toLowerCase()
                  if (n !== s && (0 !== e || 'M' !== n))
                    switch (((t[0] = s), n)) {
                      case 'V':
                        return void (t[1] -= a)
                      case 'A':
                        return (t[6] -= r), void (t[7] -= a)
                      default:
                        for (i = 1; i < t.length; i++) t[i] -= i % 2 ? r : a
                    }
                }, !0),
                this
              )
            }),
            (s.prototype.unarc = function() {
              return (
                this.iterate(function(t, e, r, a) {
                  var i,
                    n,
                    s,
                    o = [],
                    l = t[0]
                  return 'A' !== l && 'a' !== l
                    ? null
                    : ((s = 'a' === l ? ((n = r + t[6]), a + t[7]) : ((n = t[6]), t[7])),
                      0 === (i = h(r, a, n, s, t[4], t[5], t[1], t[2], t[3])).length
                        ? [['a' === t[0] ? 'l' : 'L', t[6], t[7]]]
                        : (i.forEach(function(t) {
                            o.push(['C', t[2], t[3], t[4], t[5], t[6], t[7]])
                          }),
                          o))
                }),
                this
              )
            }),
            (s.prototype.unshort = function() {
              var o,
                l,
                h,
                f,
                c,
                u = this.segments
              return (
                this.iterate(function(t, e, r, a) {
                  var i,
                    n = t[0],
                    s = n.toUpperCase()
                  e &&
                    ('T' === s
                      ? ((i = 't' === n),
                        (h = u[e - 1]),
                        (l =
                          'Q' === h[0]
                            ? ((o = h[1] - r), h[2] - a)
                            : 'q' === h[0]
                            ? ((o = h[1] - h[3]), h[2] - h[4])
                            : (o = 0)),
                        (f = -o),
                        (c = -l),
                        i || ((f += r), (c += a)),
                        (u[e] = [i ? 'q' : 'Q', f, c, t[1], t[2]]))
                      : 'S' === s &&
                        ((i = 's' === n),
                        (h = u[e - 1]),
                        (l =
                          'C' === h[0]
                            ? ((o = h[3] - r), h[4] - a)
                            : 'c' === h[0]
                            ? ((o = h[3] - h[5]), h[4] - h[6])
                            : (o = 0)),
                        (f = -o),
                        (c = -l),
                        i || ((f += r), (c += a)),
                        (u[e] = [i ? 'c' : 'C', f, c, t[1], t[2], t[3], t[4]])))
                }),
                this
              )
            }),
            (e.exports = s)
        },
        { './a2c': 4, './ellipse': 5, './matrix': 6, './path_parse': 7, './transform_parse': 9 }
      ],
      9: [
        function(t, e, r) {
          'use strict'
          var i = t('./matrix'),
            n = { matrix: !0, scale: !0, rotate: !0, translate: !0, skewX: !0, skewY: !0 },
            s = /\s*(matrix|translate|scale|rotate|skewX|skewY)\s*\(\s*(.+?)\s*\)[\s,]*/,
            o = /[\s,]+/
          e.exports = function(t) {
            var e,
              r,
              a = new i()
            return (
              t.split(s).forEach(function(t) {
                if (t.length)
                  if (void 0 === n[t])
                    switch (
                      ((r = t.split(o).map(function(t) {
                        return +t || 0
                      })),
                      e)
                    ) {
                      case 'matrix':
                        return void (6 === r.length && a.matrix(r))
                      case 'scale':
                        return void (1 === r.length
                          ? a.scale(r[0], r[0])
                          : 2 === r.length && a.scale(r[0], r[1]))
                      case 'rotate':
                        return void (1 === r.length
                          ? a.rotate(r[0], 0, 0)
                          : 3 === r.length && a.rotate(r[0], r[1], r[2]))
                      case 'translate':
                        return void (1 === r.length
                          ? a.translate(r[0], 0)
                          : 2 === r.length && a.translate(r[0], r[1]))
                      case 'skewX':
                        return void (1 === r.length && a.skewX(r[0]))
                      case 'skewY':
                        return void (1 === r.length && a.skewY(r[0]))
                    }
                  else e = t
              }),
              a
            )
          }
        },
        { './matrix': 6 }
      ],
      10: [
        function(t, e, r) {
          function u(t) {
            ;(this.ok = !1),
              '#' == t.charAt(0) && (t = t.substr(1, 6)),
              (t = (t = t.replace(/ /g, '')).toLowerCase())
            var f = {
              aliceblue: 'f0f8ff',
              antiquewhite: 'faebd7',
              aqua: '00ffff',
              aquamarine: '7fffd4',
              azure: 'f0ffff',
              beige: 'f5f5dc',
              bisque: 'ffe4c4',
              black: '000000',
              blanchedalmond: 'ffebcd',
              blue: '0000ff',
              blueviolet: '8a2be2',
              brown: 'a52a2a',
              burlywood: 'deb887',
              cadetblue: '5f9ea0',
              chartreuse: '7fff00',
              chocolate: 'd2691e',
              coral: 'ff7f50',
              cornflowerblue: '6495ed',
              cornsilk: 'fff8dc',
              crimson: 'dc143c',
              cyan: '00ffff',
              darkblue: '00008b',
              darkcyan: '008b8b',
              darkgoldenrod: 'b8860b',
              darkgray: 'a9a9a9',
              darkgreen: '006400',
              darkkhaki: 'bdb76b',
              darkmagenta: '8b008b',
              darkolivegreen: '556b2f',
              darkorange: 'ff8c00',
              darkorchid: '9932cc',
              darkred: '8b0000',
              darksalmon: 'e9967a',
              darkseagreen: '8fbc8f',
              darkslateblue: '483d8b',
              darkslategray: '2f4f4f',
              darkturquoise: '00ced1',
              darkviolet: '9400d3',
              deeppink: 'ff1493',
              deepskyblue: '00bfff',
              dimgray: '696969',
              dodgerblue: '1e90ff',
              feldspar: 'd19275',
              firebrick: 'b22222',
              floralwhite: 'fffaf0',
              forestgreen: '228b22',
              fuchsia: 'ff00ff',
              gainsboro: 'dcdcdc',
              ghostwhite: 'f8f8ff',
              gold: 'ffd700',
              goldenrod: 'daa520',
              gray: '808080',
              green: '008000',
              greenyellow: 'adff2f',
              honeydew: 'f0fff0',
              hotpink: 'ff69b4',
              indianred: 'cd5c5c',
              indigo: '4b0082',
              ivory: 'fffff0',
              khaki: 'f0e68c',
              lavender: 'e6e6fa',
              lavenderblush: 'fff0f5',
              lawngreen: '7cfc00',
              lemonchiffon: 'fffacd',
              lightblue: 'add8e6',
              lightcoral: 'f08080',
              lightcyan: 'e0ffff',
              lightgoldenrodyellow: 'fafad2',
              lightgrey: 'd3d3d3',
              lightgreen: '90ee90',
              lightpink: 'ffb6c1',
              lightsalmon: 'ffa07a',
              lightseagreen: '20b2aa',
              lightskyblue: '87cefa',
              lightslateblue: '8470ff',
              lightslategray: '778899',
              lightsteelblue: 'b0c4de',
              lightyellow: 'ffffe0',
              lime: '00ff00',
              limegreen: '32cd32',
              linen: 'faf0e6',
              magenta: 'ff00ff',
              maroon: '800000',
              mediumaquamarine: '66cdaa',
              mediumblue: '0000cd',
              mediumorchid: 'ba55d3',
              mediumpurple: '9370d8',
              mediumseagreen: '3cb371',
              mediumslateblue: '7b68ee',
              mediumspringgreen: '00fa9a',
              mediumturquoise: '48d1cc',
              mediumvioletred: 'c71585',
              midnightblue: '191970',
              mintcream: 'f5fffa',
              mistyrose: 'ffe4e1',
              moccasin: 'ffe4b5',
              navajowhite: 'ffdead',
              navy: '000080',
              oldlace: 'fdf5e6',
              olive: '808000',
              olivedrab: '6b8e23',
              orange: 'ffa500',
              orangered: 'ff4500',
              orchid: 'da70d6',
              palegoldenrod: 'eee8aa',
              palegreen: '98fb98',
              paleturquoise: 'afeeee',
              palevioletred: 'd87093',
              papayawhip: 'ffefd5',
              peachpuff: 'ffdab9',
              peru: 'cd853f',
              pink: 'ffc0cb',
              plum: 'dda0dd',
              powderblue: 'b0e0e6',
              purple: '800080',
              red: 'ff0000',
              rosybrown: 'bc8f8f',
              royalblue: '4169e1',
              saddlebrown: '8b4513',
              salmon: 'fa8072',
              sandybrown: 'f4a460',
              seagreen: '2e8b57',
              seashell: 'fff5ee',
              sienna: 'a0522d',
              silver: 'c0c0c0',
              skyblue: '87ceeb',
              slateblue: '6a5acd',
              slategray: '708090',
              snow: 'fffafa',
              springgreen: '00ff7f',
              steelblue: '4682b4',
              tan: 'd2b48c',
              teal: '008080',
              thistle: 'd8bfd8',
              tomato: 'ff6347',
              turquoise: '40e0d0',
              violet: 'ee82ee',
              violetred: 'd02090',
              wheat: 'f5deb3',
              white: 'ffffff',
              whitesmoke: 'f5f5f5',
              yellow: 'ffff00',
              yellowgreen: '9acd32'
            }
            for (var e in f) t == e && (t = f[e])
            for (
              var c = [
                  {
                    re: /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,
                    example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],
                    process: function(t) {
                      return [parseInt(t[1]), parseInt(t[2]), parseInt(t[3])]
                    }
                  },
                  {
                    re: /^(\w{2})(\w{2})(\w{2})$/,
                    example: ['#00ff00', '336699'],
                    process: function(t) {
                      return [parseInt(t[1], 16), parseInt(t[2], 16), parseInt(t[3], 16)]
                    }
                  },
                  {
                    re: /^(\w{1})(\w{1})(\w{1})$/,
                    example: ['#fb0', 'f0f'],
                    process: function(t) {
                      return [
                        parseInt(t[1] + t[1], 16),
                        parseInt(t[2] + t[2], 16),
                        parseInt(t[3] + t[3], 16)
                      ]
                    }
                  }
                ],
                r = 0;
              r < c.length;
              r++
            ) {
              var a = c[r].re,
                i = c[r].process,
                n = a.exec(t)
              if (n) {
                var s = i(n)
                ;(this.r = s[0]), (this.g = s[1]), (this.b = s[2]), (this.ok = !0)
              }
            }
            ;(this.r = this.r < 0 || isNaN(this.r) ? 0 : 255 < this.r ? 255 : this.r),
              (this.g = this.g < 0 || isNaN(this.g) ? 0 : 255 < this.g ? 255 : this.g),
              (this.b = this.b < 0 || isNaN(this.b) ? 0 : 255 < this.b ? 255 : this.b),
              (this.toRGB = function() {
                return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')'
              }),
              (this.toHex = function() {
                var t = this.r.toString(16),
                  e = this.g.toString(16),
                  r = this.b.toString(16)
                return (
                  1 == t.length && (t = '0' + t),
                  1 == e.length && (e = '0' + e),
                  1 == r.length && (r = '0' + r),
                  '#' + t + e + r
                )
              }),
              (this.getHelpXML = function() {
                for (var t = new Array(), e = 0; e < c.length; e++)
                  for (var r = c[e].example, a = 0; a < r.length; a++) t[t.length] = r[a]
                for (var i in f) t[t.length] = i
                var n = document.createElement('ul')
                n.setAttribute('id', 'rgbcolor-examples')
                for (e = 0; e < t.length; e++)
                  try {
                    var s = document.createElement('li'),
                      o = new u(t[e]),
                      l = document.createElement('div')
                    ;(l.style.cssText =
                      'margin: 3px; border: 1px solid black; background:' +
                      o.toHex() +
                      '; color:' +
                      o.toHex()),
                      l.appendChild(document.createTextNode('test'))
                    var h = document.createTextNode(
                      ' ' + t[e] + ' -> ' + o.toRGB() + ' -> ' + o.toHex()
                    )
                    s.appendChild(l), s.appendChild(h), n.appendChild(s)
                  } catch (t) {}
                return n
              })
          }
          /**
           * A class to parse color values
           * @author Stoyan Stefanov <sstoo@gmail.com>
           * @link   http://www.phpied.com/rgb-color-parser-in-javascript/
           * @license Use it if you like it
           */
          var a
          ;(a =
            ('undefined' != typeof self && self) ||
            ('undefined' != typeof window && window) ||
            this),
            void 0 !== e && e.exports ? (e.exports = u) : (a.RGBColor = u)
        },
        {}
      ],
      11: [
        function(r, m, t) {
          !(function(t) {
            function J(t) {
              var e = it(t, 'd')
              if (!e) return []
              f &&
                ((e = f(e)
                  .unshort()
                  .unarc()
                  .abs()
                  .toString()),
                t.setAttribute('d', e))
              var r = t.pathSegList
              if (r) return r
              r = []
              for (var a, i = /([a-df-zA-DF-Z])([^a-df-zA-DF-Z]*)/g; (a = i.exec(e)); ) {
                var n = yt(a[2]),
                  s = a[1],
                  o =
                    0 <= 'zZ'.indexOf(s)
                      ? 0
                      : 0 <= 'hHvV'.indexOf(s)
                      ? 1
                      : 0 <= 'mMlLtT'.indexOf(s)
                      ? 2
                      : 0 <= 'sSqQ'.indexOf(s)
                      ? 4
                      : 0 <= 'aA'.indexOf(s)
                      ? 7
                      : 0 <= 'cC'.indexOf(s)
                      ? 6
                      : -1,
                  l = 0
                do {
                  var h = { pathSegTypeAsLetter: s }
                  switch (s) {
                    case 'h':
                    case 'H':
                      h.x = n[l]
                      break
                    case 'v':
                    case 'V':
                      h.y = n[l]
                      break
                    case 'c':
                    case 'C':
                      ;(h.x1 = n[l + o - 6]), (h.y1 = n[l + o - 5])
                    case 's':
                    case 'S':
                      ;(h.x2 = n[l + o - 4]), (h.y2 = n[l + o - 3])
                    case 't':
                    case 'T':
                    case 'l':
                    case 'L':
                    case 'm':
                    case 'M':
                      ;(h.x = n[l + o - 2]), (h.y = n[l + o - 1])
                      break
                    case 'q':
                    case 'Q':
                      ;(h.x1 = n[l]), (h.y1 = n[l + 1]), (h.x = n[l + 2]), (h.y = n[l + 3])
                      break
                    case 'a':
                    case 'A':
                      throw new Error('Cannot convert Arcs without SvgPath package')
                  }
                  r.push(h), 'm' === s ? (s = 'l') : 'M' === s && (s = 'L'), (l += o)
                } while (l < n.length)
              }
              return (
                (r.getItem = function(t) {
                  return this[t]
                }),
                (r.numberOfItems = r.length),
                r
              )
            }
            function K(t, e) {
              return Math.atan2(e[1] - t[1], e[0] - t[0])
            }
            var tt,
              f,
              h,
              i,
              et,
              rt = /url\(["']?#([^"']+)["']?\)/,
              at = /^\s*data:(([^/,;]+\/[^/,;]+)(?:;([^,;=]+=[^,;=]+))?)?(?:;(base64))?,(.*\s*)$/i,
              s = 'http://www.w3.org/2000/svg',
              it = function(t, e, r) {
                r = r || e
                var a = t.style[r]
                return a || (t.hasAttribute(e) ? t.getAttribute(e) : void 0)
              },
              nt = function(t, e) {
                return 0 <= e.split(',').indexOf(t.tagName.toLowerCase())
              },
              st = function(t, e) {
                for (var r = [], a = 0; a < t.childNodes.length; a++) {
                  var i = t.childNodes[a]
                  '#' !== i.nodeName.charAt(0) && r.push(i)
                }
                for (a = 0; a < r.length; a++) e(a, r[a])
              }
            function ot(t) {
              var e = Math.sqrt(t[0] * t[0] + t[1] * t[1])
              return [t[0] / e, t[1] / e]
            }
            function lt(t, e) {
              return ot([e[0] - t[0], e[1] - t[1]])
            }
            function ht(t, e) {
              return [t[0] + e[0], t[1] + e[1]]
            }
            function o(t, e) {
              var r = e[0] - t[0],
                a = e[1] - t[1]
              return [t[0] + 2 * r, t[1] + 2 * a]
            }
            function ft(t, e) {
              return [(2 / 3) * (e[0] - t[0]) + t[0], (2 / 3) * (e[1] - t[1]) + t[1]]
            }
            function ct(t, e, r, a, i) {
              var n = r.getItem(t - 1)
              return 0 < t && ('C' === n.pathSegTypeAsLetter || 'S' === n.pathSegTypeAsLetter)
                ? o([n.x2, n.y2], e)
                : 0 < t && ('c' === n.pathSegTypeAsLetter || 's' === n.pathSegTypeAsLetter)
                ? o([n.x2 + a, n.y2 + i], e)
                : [e[0], e[1]]
            }
            function ut(t) {
              ;(this.renderedElements = {}), (this.rootSvg = t)
            }
            ut.prototype.getRendered = function(t) {
              if (this.renderedElements.hasOwnProperty(t)) return this.renderedElements[t]
              var e = this.rootSvg.querySelector('#' + i(t, { isIdentifier: !0 }))
              if (nt(e, 'lineargradient'))
                x(e, 'axial', [
                  e.getAttribute('x1') || 0,
                  e.getAttribute('y1') || 0,
                  e.getAttribute('x2') || 1,
                  e.getAttribute('y2') || 0
                ])
              else if (nt(e, 'radialgradient'))
                x(e, 'radial', [
                  e.getAttribute('fx') || e.getAttribute('cx') || 0.5,
                  e.getAttribute('fy') || e.getAttribute('cy') || 0.5,
                  0,
                  e.getAttribute('cx') || 0.5,
                  e.getAttribute('cy') || 0.5,
                  e.getAttribute('r') || 0.5
                ])
              else if (nt(e, 'pattern')) g(e, this, dt.default())
              else if (nt(e, 'marker')) {
                var r = mt(e),
                  a = kt(e)
                et.beginFormObject(a[0], a[1], a[2], a[3], r),
                  Mt(e, et.unitMatrix, this, !1, !1, dt.default()),
                  et.endFormObject(e.getAttribute('id'))
              } else nt(e, 'clippath') || Ft(e, et.unitMatrix, this, !0, !1, dt.default())
              return (this.renderedElements[t] = e)
            }
            var dt = function() {
              ;(this.xmlSpace = null),
                (this.color = null),
                (this.fill = null),
                (this.fillOpacity = 1),
                (this.fontFamily = null),
                (this.fontSize = 16),
                (this.fontStyle = null),
                (this.fontWeight = null),
                (this.opacity = 1),
                (this.stroke = null),
                (this.strokeDasharray = null),
                (this.strokeDashoffset = null),
                (this.strokeLinecap = null),
                (this.strokeLinejoin = null),
                (this.strokeMiterlimit = 4),
                (this.strokeOpacity = 1),
                (this.strokeWidth = 1),
                (this.textAnchor = null),
                (this.visibility = null)
            }
            function pt() {
              this.markers = []
            }
            function xt(t, e, r) {
              ;(this.id = t), (this.anchor = e), (this.angle = r)
            }
            function N(t) {
              return t.replace(/[\n\r]/g, '')
            }
            function O(t) {
              return t.replace(/[\t]/g, ' ')
            }
            function L(t) {
              return t.replace(/ +/g, ' ')
            }
            function l(t, e, r, a, i, n) {
              var s,
                o,
                l = e[0],
                h = e[1],
                f = e[2],
                c = e[3],
                u = i / f,
                d = n / c,
                p = t.getAttribute('preserveAspectRatio')
              if (p) {
                var x = p.split(' ')
                'defer' === x[0] && (x = x.slice(1)), (s = x[0]), (o = x[1] || 'meet')
              } else (s = 'xMidYMid'), (o = 'meet')
              'none' !== s &&
                ('meet' === o
                  ? (u = d = Math.min(u, d))
                  : 'slice' === o && (u = d = Math.max(u, d)))
              var g = r - l * u,
                v = a - h * d
              0 <= s.indexOf('xMid')
                ? (g += (i - f * u) / 2)
                : 0 <= s.indexOf('xMax') && (g += i - f * u),
                0 <= s.indexOf('yMid')
                  ? (v += (n - c * d) / 2)
                  : 0 <= s.indexOf('yMax') && (v += n - c * d)
              var m = new et.Matrix(1, 0, 0, 1, g, v),
                b = new et.Matrix(u, 0, 0, d, 0, 0)
              return et.matrixMult(b, m)
            }
            ;(dt.default = function() {
              var t = new dt()
              return (
                (t.xmlSpace = 'default'),
                (t.fill = new tt('rgb(0, 0, 0)')),
                (t.fillOpacity = 1),
                (t.fontFamily = 'times'),
                (t.fontSize = 16),
                (t.fontStyle = 'normal'),
                (t.fontWeight = 'normal'),
                (t.opacity = 1),
                (t.stroke = null),
                (t.strokeDasharray = null),
                (t.strokeDashoffset = null),
                (t.strokeLinecap = 'butt'),
                (t.strokeLinejoin = 'miter'),
                (t.strokeMiterlimit = 4),
                (t.strokeOpacity = 1),
                (t.strokeWidth = 1),
                (t.textAnchor = 'start'),
                (t.visibility = 'visible'),
                t
              )
            }),
              (dt.prototype.clone = function() {
                var t = new dt()
                return (
                  (t.xmlSpace = this.xmlSpace),
                  (t.fill = this.fill),
                  (t.fillOpacity = this.fillOpacity),
                  (t.fontFamily = this.fontFamily),
                  (t.fontSize = this.fontSize),
                  (t.fontStyle = this.fontStyle),
                  (t.fontWeight = this.fontWeight),
                  (t.opacity = this.opacity),
                  (t.stroke = this.stroke),
                  (t.strokeDasharray = this.strokeDasharray),
                  (t.strokeDashoffset = this.strokeDashoffset),
                  (t.strokeLinecap = this.strokeLinecap),
                  (t.strokeLinejoin = this.strokeLinejoin),
                  (t.strokeMiterlimit = this.strokeMiterlimit),
                  (t.strokeOpacity = this.strokeOpacity),
                  (t.strokeWidth = this.strokeWidth),
                  (t.textAnchor = this.textAnchor),
                  (t.visibility = this.visibility),
                  t
                )
              }),
              (pt.prototype.addMarker = function(t) {
                this.markers.push(t)
              }),
              (pt.prototype.draw = function(t, e, r) {
                for (var a = 0; a < this.markers.length; a++) {
                  var i,
                    n = this.markers[a],
                    s = n.angle,
                    o = n.anchor,
                    l = Math.cos(s),
                    h = Math.sin(s)
                  ;(i = new et.Matrix(l, h, -h, l, o[0], o[1])),
                    (i = et.matrixMult(new et.Matrix(r.strokeWidth, 0, 0, r.strokeWidth, 0, 0), i)),
                    (i = et.matrixMult(i, t)),
                    et.saveGraphicsState(),
                    et.setLineWidth(1),
                    e.getRendered(n.id),
                    et.doFormObject(n.id, i),
                    et.restoreGraphicsState()
                }
              })
            function gt(t) {
              for (var e = yt(t), r = [], a = 0; a < e.length - 1; a += 2) {
                var i = e[a],
                  n = e[a + 1]
                r.push([i, n])
              }
              return r
            }
            function vt(t, e) {
              var r = t[0],
                a = t[1]
              return [e.a * r + e.c * a + e.e, e.b * r + e.d * a + e.f]
            }
            function T(t, e) {
              switch (it(t, 'text-transform')) {
                case 'uppercase':
                  return e.toUpperCase()
                case 'lowercase':
                  return e.toLowerCase()
                default:
                  return e
              }
            }
            var mt = function(t) {
                var e,
                  r,
                  a,
                  i = et.unitMatrix
                if (nt(t, 'svg,g'))
                  if (
                    ((r = parseFloat(it(t, 'x')) || 0),
                    (a = parseFloat(it(t, 'y')) || 0),
                    (e = t.getAttribute('viewBox')))
                  ) {
                    var n = yt(e)
                    i = l(
                      t,
                      n,
                      r,
                      a,
                      parseFloat(it(t, 'width')) || n[2],
                      parseFloat(it(t, 'height')) || n[3]
                    )
                  } else i = new et.Matrix(1, 0, 0, 1, r, a)
                else if (nt(t, 'marker'))
                  if (
                    ((r = parseFloat(t.getAttribute('refX')) || 0),
                    (a = parseFloat(t.getAttribute('refY')) || 0),
                    (e = t.getAttribute('viewBox')))
                  ) {
                    var s = yt(e)
                    ;(s[0] = s[1] = 0),
                      (i = l(
                        t,
                        s,
                        0,
                        0,
                        parseFloat(t.getAttribute('markerWidth')) || 3,
                        parseFloat(t.getAttribute('markerHeight')) || 3
                      )),
                      (i = et.matrixMult(new et.Matrix(1, 0, 0, 1, -r, -a), i))
                  } else i = new et.Matrix(1, 0, 0, 1, -r, -a)
                var o = it(t, 'transform')
                return o ? et.matrixMult(i, bt(o)) : i
              },
              bt = function(t) {
                if (!t || 'none' === t) return et.unitMatrix
                for (
                  var e,
                    r = /^[\s,]*matrix\(([^\)]+)\)\s*/,
                    a = /^[\s,]*translate\(([^\)]+)\)\s*/,
                    i = /^[\s,]*rotate\(([^\)]+)\)\s*/,
                    n = /^[\s,]*scale\(([^\)]+)\)\s*/,
                    s = /^[\s,]*skewX\(([^\)]+)\)\s*/,
                    o = /^[\s,]*skewY\(([^\)]+)\)\s*/,
                    l = et.unitMatrix;
                  0 < t.length;

                ) {
                  var h = r.exec(t)
                  if (
                    (h &&
                      ((e = yt(h[1])),
                      (l = et.matrixMult(new et.Matrix(e[0], e[1], e[2], e[3], e[4], e[5]), l)),
                      (t = t.substr(h[0].length))),
                    (h = i.exec(t)))
                  ) {
                    e = yt(h[1])
                    var f = (Math.PI * e[0]) / 180
                    if (
                      ((l = et.matrixMult(
                        new et.Matrix(Math.cos(f), Math.sin(f), -Math.sin(f), Math.cos(f), 0, 0),
                        l
                      )),
                      e[1] && e[2])
                    ) {
                      var c = new et.Matrix(1, 0, 0, 1, e[1], e[2]),
                        u = new et.Matrix(1, 0, 0, 1, -e[1], -e[2])
                      l = et.matrixMult(u, et.matrixMult(l, c))
                    }
                    t = t.substr(h[0].length)
                  }
                  ;(h = a.exec(t)) &&
                    ((e = yt(h[1])),
                    (l = et.matrixMult(new et.Matrix(1, 0, 0, 1, e[0], e[1] || 0), l)),
                    (t = t.substr(h[0].length))),
                    (h = n.exec(t)) &&
                      ((e = yt(h[1]))[1] || (e[1] = e[0]),
                      (l = et.matrixMult(new et.Matrix(e[0], 0, 0, e[1], 0, 0), l)),
                      (t = t.substr(h[0].length))),
                    (h = s.exec(t)) &&
                      ((e = parseFloat(h[1])),
                      (e *= Math.PI / 180),
                      (l = et.matrixMult(new et.Matrix(1, 0, Math.tan(e), 1, 0, 0), l)),
                      (t = t.substr(h[0].length))),
                    (h = o.exec(t)) &&
                      ((e = parseFloat(h[1])),
                      (e *= Math.PI / 180),
                      (l = et.matrixMult(new et.Matrix(1, Math.tan(e), 0, 1, 0, 0), l)),
                      (t = t.substr(h[0].length)))
                }
                return l
              },
              yt = function(t) {
                for (
                  var e, r = [], a = /[+-]?(?:(?:\d+\.?\d*)|(?:\d*\.?\d+))(?:[eE][+-]?\d+)?/g;
                  (e = a.exec(t));

                )
                  r.push(parseFloat(e[0]))
                return r
              },
              kt = function(t) {
                if ('none' === it(t, 'display')) return [0, 0, 0, 0]
                var e,
                  r,
                  a,
                  i,
                  n,
                  s,
                  o,
                  l,
                  h = parseFloat
                if (nt(t, 'polygon,polyline')) {
                  var f = gt(t.getAttribute('points'))
                  for (
                    r = Number.POSITIVE_INFINITY,
                      a = Number.POSITIVE_INFINITY,
                      i = Number.NEGATIVE_INFINITY,
                      n = Number.NEGATIVE_INFINITY,
                      e = 0;
                    e < f.length;
                    e++
                  ) {
                    var c = f[e]
                    ;(r = Math.min(r, c[0])),
                      (i = Math.max(i, c[0])),
                      (a = Math.min(a, c[1])),
                      (n = Math.max(n, c[1]))
                  }
                  l = [r, a, i - r, n - a]
                } else if (nt(t, 'path')) {
                  var u = J(t)
                  ;(r = Number.POSITIVE_INFINITY),
                    (a = Number.POSITIVE_INFINITY),
                    (i = Number.NEGATIVE_INFINITY),
                    (n = Number.NEGATIVE_INFINITY)
                  var d,
                    p,
                    x,
                    g,
                    v,
                    m,
                    b,
                    y = 0,
                    k = 0
                  for (e = 0; e < u.numberOfItems; e++) {
                    var w = u.getItem(e),
                      M = w.pathSegTypeAsLetter
                    switch (M) {
                      case 'H':
                        ;(x = w.x), (g = k)
                        break
                      case 'h':
                        ;(x = w.x + y), (g = k)
                        break
                      case 'V':
                        ;(x = y), (g = w.y)
                        break
                      case 'v':
                        ;(x = y), (g = w.y + k)
                        break
                      case 'C':
                        ;(v = [w.x1, w.y1]), (m = [w.x2, w.y2]), (b = [w.x, w.y])
                        break
                      case 'c':
                        ;(v = [w.x1 + y, w.y1 + k]),
                          (m = [w.x2 + y, w.y2 + k]),
                          (b = [w.x + y, w.y + k])
                        break
                      case 'S':
                        ;(v = ct(e, [y, k], u, d, p)), (m = [w.x2, w.y2]), (b = [w.x, w.y])
                        break
                      case 's':
                        ;(v = ct(e, [y, k], u, d, p)),
                          (m = [w.x2 + y, w.y2 + k]),
                          (b = [w.x + y, w.y + k])
                        break
                      case 'Q':
                        ;(h = [w.x1, w.y1]),
                          (v = ft([y, k], h)),
                          (m = ft([w.x, w.y], h)),
                          (b = [w.x, w.y])
                        break
                      case 'q':
                        ;(h = [w.x1 + y, w.y1 + k]),
                          (v = ft([y, k], h)),
                          (m = ft([y + w.x, k + w.y], h)),
                          (b = [w.x + y, w.y + k])
                        break
                      case 'T':
                        ;(v = ct(e, [y, k], u, d, p)),
                          (v = ft([y, k], h)),
                          (m = ft([w.x, w.y], h)),
                          (b = [w.x, w.y])
                        break
                      case 't':
                        ;(h = ct(e, [y, k], u, d, p)),
                          (v = ft([y, k], h)),
                          (m = ft([y + w.x, k + w.y], h)),
                          (b = [w.x + y, w.y + k])
                    }
                    0 <= 'sScCqQtT'.indexOf(M) && ((d = y), (p = k)),
                      0 <= 'MLCSQT'.indexOf(M)
                        ? ((y = w.x), (k = w.y))
                        : 0 <= 'mlcsqt'.indexOf(M)
                        ? ((y = w.x + y), (k = w.y + k))
                        : 'zZ'.indexOf(M) < 0 && ((y = x), (k = g)),
                      (n =
                        0 <= 'CSQTcsqt'.indexOf(M)
                          ? ((r = Math.min(r, y, v[0], m[0], b[0])),
                            (i = Math.max(i, y, v[0], m[0], b[0])),
                            (a = Math.min(a, k, v[1], m[1], b[1])),
                            Math.max(n, k, v[1], m[1], b[1]))
                          : ((r = Math.min(r, y)),
                            (i = Math.max(i, y)),
                            (a = Math.min(a, k)),
                            Math.max(n, k)))
                  }
                  l = [r, a, i - r, n - a]
                } else {
                  if (nt(t, 'svg'))
                    return (
                      (s = t.getAttribute('viewBox')) && (o = yt(s)),
                      [
                        h(it(t, 'x')) || (o && o[0]) || 0,
                        h(it(t, 'y')) || (o && o[1]) || 0,
                        h(it(t, 'width')) || (o && o[2]) || 0,
                        h(it(t, 'height')) || (o && o[3]) || 0
                      ]
                    )
                  if (nt(t, 'g,clippath'))
                    (l = [0, 0, 0, 0]),
                      st(t, function(t, e) {
                        var r = kt(e)
                        l = [
                          Math.min(l[0], r[0]),
                          Math.min(l[1], r[1]),
                          Math.max(l[0] + l[2], r[0] + r[2]) - Math.min(l[0], r[0]),
                          Math.max(l[1] + l[3], r[1] + r[3]) - Math.min(l[1], r[1])
                        ]
                      })
                  else {
                    if (nt(t, 'marker'))
                      return (
                        (s = t.getAttribute('viewBox')) && (o = yt(s)),
                        [
                          (o && o[0]) || 0,
                          (o && o[1]) || 0,
                          (o && o[2]) || h(t.getAttribute('marker-width')) || 0,
                          (o && o[3]) || h(t.getAttribute('marker-height')) || 0
                        ]
                      )
                    if (nt(t, 'pattern'))
                      return [
                        h(t.getAttribute('x')) || 0,
                        h(t.getAttribute('y')) || 0,
                        h(t.getAttribute('width')) || 0,
                        h(t.getAttribute('height')) || 0
                      ]
                    var A =
                        h(t.getAttribute('x1')) ||
                        h(it(t, 'x')) ||
                        h(it(t, 'cx') - h(it(t, 'r'))) ||
                        0,
                      S =
                        h(t.getAttribute('x2')) ||
                        A + h(it(t, 'width')) ||
                        h(it(t, 'cx')) + h(it(t, 'r')) ||
                        0,
                      F =
                        h(t.getAttribute('y1')) ||
                        h(it(t, 'y')) ||
                        h(it(t, 'cy')) - h(it(t, 'r')) ||
                        0,
                      C =
                        h(t.getAttribute('y2')) ||
                        F + h(it(t, 'height')) ||
                        h(it(t, 'cy')) + h(it(t, 'r')) ||
                        0
                    l = [
                      Math.min(A, S),
                      Math.min(F, C),
                      Math.max(A, S) - Math.min(A, S),
                      Math.max(F, C) - Math.min(F, C)
                    ]
                  }
                }
                if (nt(t, 'marker,svg,g')) return l
                var I = it(t, 'stroke-width') || 1
                return (
                  it(t, 'stroke-miterlimit') && (I *= 0.5 / Math.sin(Math.PI / 12)),
                  [l[0] - I, l[1] - I, l[2] + 2 * I, l[3] + 2 * I]
                )
              },
              c = null
            var n,
              u,
              a =
                ((n =
                  'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789!"$%&/()=?\'\\+*-_.:,;^}][{#~|<>'),
                (u = {}),
                function(t) {
                  var e = u[t]
                  if (!e) {
                    var r = d(n, t, '16px', 'normal', 'normal'),
                      a = p(n, t, '16px', 'normal', 'normal')
                    ;(e = Math.abs(r - a) < 0.1 ? d : p), (u[t] = e)
                  }
                  return e
                })
            function d(t, e, r, a, i) {
              var n = document.createElement('canvas').getContext('2d')
              return (n.font = [a, i, r, e].join(' ')), n.measureText(t).width
            }
            function p(t, e, r, a, i) {
              var n = (function() {
                if (!c) {
                  c = document.createElementNS(s, 'text')
                  var t = document.createElementNS(s, 'svg')
                  t.appendChild(c),
                    t.style.setProperty('position', 'absolute'),
                    t.style.setProperty('visibility', 'hidden'),
                    document.body.appendChild(t)
                }
                return c
              })()
              return (
                n.setAttribute('font-family', e),
                n.setAttribute('font-size', r),
                n.setAttribute('font-style', a),
                n.setAttribute('font-weight', i),
                n.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve'),
                (n.textContent = t),
                n.getBBox().width
              )
            }
            function _(t, e) {
              if (0 === t.length) return 0
              var r = e.fontFamily
              return a(r)(t, e.fontFamily, e.fontSize + 'px', e.fontStyle, e.fontWeight)
            }
            function q(t) {
              var e = 'invisible'
              return (
                t.fill && t.stroke
                  ? (e = 'fillThenStroke')
                  : t.fill
                  ? (e = 'fill')
                  : t.stroke && (e = 'stroke'),
                e
              )
            }
            function P(t, e, r) {
              ;(this.texts = []),
                (this.textNodes = []),
                (this.textAnchor = t),
                (this.originX = e),
                (this.originY = r)
            }
            function E(t, e) {
              var r
              return (r = t && t.toString().match(/^([\-0-9.]+)em$/))
                ? parseFloat(r[1]) * e
                : (r = t && t.toString().match(/^([\-0-9.]+)(px|)$/))
                ? parseFloat(r[1])
                : 0
            }
            ;(P.prototype.add = function(t, e) {
              this.texts.push(e), this.textNodes.push(t)
            }),
              (P.prototype.put = function(t, e) {
                var r,
                  a,
                  i,
                  n = [],
                  s = [],
                  o = [],
                  l = this.originX,
                  h = this.originY,
                  f = l,
                  c = l
                for (r = 0; r < this.textNodes.length; r++) {
                  var u = l,
                    d = h
                  if ('#text' === (a = this.textNodes[r]).nodeName) p = e
                  else {
                    var p = e.clone(),
                      x = it(a, 'fill')
                    At(a, x && new tt(x), p)
                    var g = it(a, 'stroke')
                    if (g) (y = new tt(g)).ok && (p.stroke = y)
                    var v = it(a, 'stroke-width')
                    void 0 !== v && (p.strokeWidth = parseFloat(v))
                    var m = a.getAttribute('dx')
                    null !== m && (u += E(m, p.fontSize))
                    var b = a.getAttribute('dy')
                    null !== b && (d += E(b, p.fontSize))
                  }
                  ;(o[r] = p),
                    (n[r] = u),
                    (s[r] = d),
                    (l = u + _(this.texts[r], p)),
                    (h = d),
                    (f = Math.min(f, u)),
                    (c = Math.max(c, l))
                }
                switch (this.textAnchor) {
                  case 'start':
                    i = 0
                    break
                  case 'middle':
                    i = (c - f) / 2
                    break
                  case 'end':
                    i = c - f
                }
                for (r = 0; r < this.textNodes.length; r++) {
                  if ('#text' !== (a = this.textNodes[r]).nodeName)
                    if ('hidden' === (it(a, 'visibility') || e.visibility)) continue
                  if (
                    (et.saveGraphicsState(),
                    St(o[r], e),
                    o[r].stroke && o[r].stroke !== e.stroke && o[r].stroke.ok)
                  ) {
                    var y = o[r].stroke
                    et.setDrawColor(y.r, y.g, y.b)
                  }
                  null !== o[r].strokeWidth &&
                    o[r].strokeWidth !== e.strokeWidth &&
                    et.setLineWidth(o[r].strokeWidth)
                  var k = q(o[r])
                  et.text(this.texts[r], n[r] - i, s[r], {
                    angle: t,
                    renderingMode: 'fill' === k ? void 0 : k
                  }),
                    et.restoreGraphicsState()
                }
                return [l, h]
              })
            function wt(t, e, r, a, i) {
              et.saveGraphicsState()
              var n,
                s,
                o = 0,
                l = et.getFontSize(),
                h = E(t.getAttribute('x'), l),
                f = E(t.getAttribute('y'), l)
              ;(n = E(t.getAttribute('dx'), l)), (s = E(t.getAttribute('dy'), l))
              var c = i.visibility,
                u = t.childElementCount
              if (0 === u) {
                var d = (function(t, e) {
                    return (
                      (t = O((t = N(t)))), 'default' === e.xmlSpace && (t = L((t = t.trim()))), t
                    )
                  })(t.textContent, i),
                  p = T(t, d)
                if (
                  ((o = (function(t, e) {
                    var r = e.textAnchor
                    if ('start' === r) return 0
                    var a = _(t, e),
                      i = 0
                    switch (r) {
                      case 'end':
                        i = a
                        break
                      case 'middle':
                        i = a / 2
                    }
                    return i
                  })(p, i)),
                  'visible' === c)
                ) {
                  var x = q(i)
                  et.text(p, h + n - o, f + s, {
                    angle: e,
                    renderingMode: 'fill' === x ? void 0 : x
                  })
                }
              } else {
                for (
                  var g = new P(i.textAnchor, h + n, f + s), v = 0;
                  v < t.childNodes.length;
                  v++
                ) {
                  var m = t.childNodes[v]
                  if (m.textContent) {
                    var b = i.xmlSpace,
                      y = m.textContent
                    if ('#text' === m.nodeName);
                    else {
                      if (nt(m, 'title')) continue
                      if (nt(m, 'tspan')) {
                        var k,
                          w = m
                        if (0 < w.childElementCount) {
                          y = ''
                          for (var M = 0; M < w.childNodes.length; M++)
                            '#text' === w.childNodes[M].nodeName &&
                              (y += w.childNodes[M].textContent)
                        }
                        var A = w.getAttribute('x')
                        if (null !== A) {
                          var S = E(A, l)
                          ;(k = g.put(e, i)),
                            (g = new P(it(w, 'text-anchor') || i.textAnchor, S, k[1]))
                        }
                        var F = w.getAttribute('y')
                        if (null !== F) {
                          var C = E(F, l)
                          ;(k = g.put(e, i)),
                            (g = new P(it(w, 'text-anchor') || i.textAnchor, k[0], C))
                        }
                        var I = w.getAttribute('xml:space')
                        I && (b = I)
                      }
                    }
                    ;(d = O((d = N(y)))),
                      'default' === b &&
                        (0 === v && (d = d.replace(/^\s+/, '')),
                        v === u - 1 && (d = d.replace(/\s+$/, '')),
                        (d = L(d))),
                      (p = T(t, d)),
                      g.add(m, p)
                  }
                }
                g.put(e, i)
              }
              et.restoreGraphicsState()
            }
            var Mt = function(t, r, a, i, n, s) {
              st(t, function(t, e) {
                Ft(e, r, a, i, n, s)
              })
            }
            var x = function(t, e, r) {
                var a,
                  i = [],
                  n = 0,
                  s = !1
                st(t, function(t, e) {
                  if ('stop' === e.tagName.toLowerCase()) {
                    var r = new tt(it(e, 'stop-color'))
                    i.push({
                      offset: (function(t) {
                        var e = parseFloat(t)
                        return !isNaN(e) && 0 <= t.indexOf('%') ? e / 100 : e
                      })(e.getAttribute('offset')),
                      color: [r.r, r.g, r.b]
                    })
                    var a = it(e, 'stop-opacity')
                    a && 1 != a && ((n += parseFloat(a)), (s = !0))
                  }
                }),
                  s && (a = new et.GState({ opacity: n / i.length }))
                var o = new et.ShadingPattern(e, r, i, a),
                  l = t.getAttribute('id')
                et.addShadingPattern(l, o)
              },
              g = function(t, e, r) {
                var a = t.getAttribute('id'),
                  i = kt(t),
                  n = new et.TilingPattern(
                    [i[0], i[1], i[0] + i[2], i[1] + i[3]],
                    i[2],
                    i[3],
                    null,
                    et.unitMatrix
                  )
                et.beginTilingPattern(n),
                  Mt(t, et.unitMatrix, e, !1, !1, r),
                  et.endTilingPattern(a, n)
              },
              v = {
                'sans-serif': 'helvetica',
                verdana: 'helvetica',
                arial: 'helvetica',
                fixed: 'courier',
                monospace: 'courier',
                terminal: 'courier',
                serif: 'times',
                cursive: 'times',
                fantasy: 'times'
              }
            function At(t, e, r) {
              e && e.ok && (r.fill = e)
              var a = it(t, 'font-weight')
              a && (r.fontWeight = a)
              var i = it(t, 'font-style')
              i && (r.fontStyle = i)
              var n = it(t, 'font-family')
              if (n) {
                var s = h.parse(n)
                r.fontFamily = (function(t, e) {
                  var r = ''
                  'bold' === t.fontWeight && (r = 'bold'),
                    'italic' === t.fontStyle && (r += 'italic'),
                    '' === r && (r = 'normal')
                  var a = et.getFontList(),
                    i = ''
                  return (
                    e.some(function(t) {
                      var e = a[t]
                      return e && 0 <= e.indexOf(r)
                        ? ((i = t), !0)
                        : ((t = t.toLowerCase()), !!v.hasOwnProperty(t) && ((i = t), !0))
                    }) || (i = 'times'),
                    i
                  )
                })(r, s)
              }
              var o = it(t, 'font-size')
              o && (r.fontSize = parseFloat(o))
              var l = it(t, 'text-anchor')
              l && (r.textAnchor = l)
            }
            function St(t, e) {
              if (
                (t.fontFamily !== e.fontFamily &&
                  (v.hasOwnProperty(t.fontFamily)
                    ? et.setFont(v[t.fontFamily])
                    : et.setFont(t.fontFamily)),
                t.fill && t.fill !== e.fill && t.fill.ok)
              ) {
                var r = t.fill
                et.setTextColor(r.r, r.g, r.b)
              }
              if (t.fontWeight !== e.fontWeight || t.fontStyle !== e.fontStyle) {
                var a = ''
                'bold' === t.fontWeight && (a = 'bold'),
                  'italic' === t.fontStyle && (a += 'italic'),
                  '' === a && (a = 'normal'),
                  et.setFontType(a)
              }
              t.fontSize !== e.fontSize && et.setFontSize(t.fontSize * et.internal.scaleFactor)
            }
            function e(a, t, e) {
              et = t
              var i = e.scale || 1,
                n = e.xOffset || 0,
                s = e.yOffset || 0
              return (
                et.advancedAPI(function() {
                  et.saveGraphicsState(),
                    et.setCurrentTransformationMatrix(new et.Matrix(i, 0, 0, i, n, s))
                  var t = dt.default()
                  et.setLineWidth(t.strokeWidth)
                  var e = t.fill
                  et.setFillColor(e.r, e.g, e.b),
                    et.setFont(t.fontFamily),
                    et.setFontSize(t.fontSize * et.internal.scaleFactor)
                  var r = new ut(a)
                  Ft(a.cloneNode(!0), et.unitMatrix, r, !1, !1, t), et.restoreGraphicsState()
                }),
                c && (document.body.removeChild(c.parentNode), (c = null)),
                et
              )
            }
            var Ft = function(t, e, r, a, i, n) {
              var s = n
              if (
                ((n = n.clone()),
                !nt(t, 'defs,clippath,pattern,lineargradient,radialgradient,marker')) &&
                ('none' !== it(t, 'display') &&
                  ('hidden' !== (n.visibility = it(t, 'visibility') || n.visibility) ||
                    nt(t, 'svg,g,marker,a,pattern,defs,text')))
              ) {
                var o,
                  l,
                  h = !1,
                  f = null,
                  c = 'inherit',
                  u = 'inherit',
                  d = void 0,
                  p = a && !nt(t, 'lineargradient,radialgradient,pattern,clippath')
                p
                  ? ((o = mt(t)),
                    (l = kt(t)),
                    et.beginFormObject(l[0], l[1], l[2], l[3], o),
                    (o = et.unitMatrix),
                    (a = !1))
                  : ((o = et.matrixMult(mt(t), e)), i || et.saveGraphicsState())
                var x = t.hasAttribute('clip-path') && 'none' !== it(t, 'clip-path')
                if (x) {
                  var g = rt.exec(it(t, 'clip-path')),
                    v = r.getRendered(g[1])
                  if (
                    !(function r(t, e) {
                      if ('none' === it(t, 'display')) return !1
                      var a = !e,
                        i = it(t, 'visibility')
                      if (
                        (i && (a = 'hidden' !== i),
                        nt(t, 'svg,g,marker,a,pattern,defs,text,clippath'))
                      ) {
                        var n = !1
                        if (
                          (st(t, function(t, e) {
                            ;(n = !0), r(e, !a) && (a = !0)
                          }),
                          !n)
                        )
                          return !1
                      }
                      return a
                    })(v)
                  )
                    return void et.restoreGraphicsState()
                  var m = o
                  v.hasAttribute('clipPathUnits') &&
                    'objectboundingbox' === v.getAttribute('clipPathUnits').toLowerCase() &&
                    ((l = kt(t)),
                    (m = et.matrixMult(new et.Matrix(l[2], 0, 0, l[3], l[0], l[1]), m))),
                    (m = et.matrixMult(mt(v), m)),
                    et.saveGraphicsState(),
                    et.setCurrentTransformationMatrix(m),
                    Mt(v, et.unitMatrix, r, !1, !0, dt.default()),
                    et.clip().discardPath(),
                    et.setCurrentTransformationMatrix(m.inversed())
                }
                if (nt(t, 'svg,g,path,rect,text,ellipse,line,circle,polygon,polyline')) {
                  var b = it(t, 'fill')
                  if (b) {
                    var y = rt.exec(b)
                    if (y) {
                      var k = y[1],
                        w = r.getRendered(k)
                      if (w && nt(w, 'lineargradient,radialgradient')) {
                        var M
                        M =
                          w.hasAttribute('gradientUnits') &&
                          'objectboundingbox' !== w.getAttribute('gradientUnits').toLowerCase()
                            ? et.unitMatrix
                            : ((l = l || kt(t)), new et.Matrix(l[2], 0, 0, l[3], l[0], l[1]))
                        var A = bt(it(w, 'gradientTransform', 'transform'))
                        ;(d = { key: k, matrix: et.matrixMult(A, M) }), (c = !0)
                      } else if (w && nt(w, 'pattern')) {
                        var S, F, C, I, N
                        d = { key: k }
                        var O = et.unitMatrix
                        ;(w.hasAttribute('patternUnits') &&
                          'objectboundingbox' !== w.getAttribute('patternUnits').toLowerCase()) ||
                          ((l = l || kt(t)),
                          (O = new et.Matrix(1, 0, 0, 1, l[0], l[1])),
                          (N = (S = kt(w))[0] * l[0]),
                          (F = S[1] * l[1]),
                          (C = S[2] * l[2]),
                          (I = S[3] * l[3]),
                          (d.boundingBox = [N, F, N + C, F + I]),
                          (d.xStep = C),
                          (d.yStep = I))
                        var L = et.unitMatrix
                        w.hasAttribute('patternContentUnits') &&
                          'objectboundingbox' ===
                            w.getAttribute('patternContentUnits').toLowerCase() &&
                          ((l = l || kt(t)),
                          (L = new et.Matrix(l[2], 0, 0, l[3], 0, 0)),
                          (N = (S = d.boundingBox || kt(w))[0] / l[0]),
                          (F = S[1] / l[1]),
                          (C = S[2] / l[2]),
                          (I = S[3] / l[3]),
                          (d.boundingBox = [N, F, N + C, F + I]),
                          (d.xStep = C),
                          (d.yStep = I))
                        var T = et.unitMatrix
                        w.hasAttribute('patternTransform') &&
                          (T = bt(it(w, 'patternTransform', 'transform')))
                        var _ = L
                        ;(_ = et.matrixMult(_, O)),
                          (_ = et.matrixMult(_, T)),
                          (_ = et.matrixMult(_, o)),
                          (d.matrix = _),
                          (c = !0)
                      } else (f = new tt('rgb(0, 0, 0)')), (c = h = !0)
                    } else
                      (f = (function(t) {
                        if ('transparent' === t) {
                          var e = new tt('rgb(0,0,0)')
                          return (e.a = 0), e
                        }
                        var r = /\s*rgba\(((?:[^,\)]*,){3}[^,\)]*)\)\s*/.exec(t)
                        if (r) {
                          var a = yt(r[1]),
                            i = new tt('rgb(' + a.slice(0, 3).join(',') + ')')
                          return (i.a = a[3]), i
                        }
                        return new tt(t)
                      })(b)),
                        (c = !!f.ok && (h = !0))
                  }
                  var q = 1,
                    P = 1,
                    E = it(t, 'fill-opacity')
                  E && (q *= parseFloat(E)), f && 'number' == typeof f.a && (q *= f.a)
                  var z = it(t, 'stroke-opacity')
                  z && (P *= parseFloat(z)), R && 'number' == typeof R.a && (P *= R.a)
                  var W = it(t, 'opacity')
                  if (W) {
                    var j = parseFloat(W)
                    ;(P *= j), (q *= j)
                  }
                  var G = q < 1,
                    D = P < 1
                  if (G || D) {
                    var Y = {}
                    G && (Y.opacity = q),
                      D && (Y['stroke-opacity'] = P),
                      et.setGState(new et.GState(Y))
                  }
                }
                if (nt(t, 'svg,text,g,path,rect,ellipse,line,circle,polygon,polyline')) {
                  'none' === b
                    ? (n.fill = null)
                    : h && ((n.fill = f), nt(t, 'text') || et.setFillColor(f.r, f.g, f.b))
                  var V = it(t, 'stroke-width')
                  void 0 !== V && '' !== V
                    ? ((V = Math.abs(parseFloat(V))), (n.strokeWidth = V), et.setLineWidth(V))
                    : (V = n.strokeWidth)
                  var U = it(t, 'stroke')
                  if (U)
                    if ('none' === U) n.stroke = null
                    else {
                      var R = new tt(U)
                      R.ok && ((n.stroke = R), et.setDrawColor(R.r, R.g, R.b), (u = 0 !== V))
                    }
                  var H = it(t, 'stroke-linecap')
                  H && et.setLineCap((n.strokeLinecap = H))
                  var B = it(t, 'stroke-linejoin')
                  B && et.setLineJoin((n.strokeLinejoin = B))
                  var X = it(t, 'stroke-dasharray')
                  if (X) {
                    X = yt(X)
                    var Q = parseInt(it(t, 'stroke-dashoffset')) || 0
                    ;(n.strokeDasharray = X), (n.strokeDashoffset = Q), et.setLineDashPattern(X, Q)
                  }
                  var Z = it(t, 'stroke-miterlimit')
                  void 0 !== Z &&
                    '' !== Z &&
                    et.setLineMiterLimit((n.strokeMiterlimit = parseFloat(Z)))
                }
                'inherit' === c && (c = null !== n.fill), 'inherit' === u && (u = null !== n.stroke)
                var $ = t.getAttribute('xml:space')
                switch (($ && (n.xmlSpace = $), At(t, f, n), St(n, s), t.tagName.toLowerCase())) {
                  case 'svg':
                  case 'g':
                  case 'a':
                    Mt(t, o, r, a, !1, n)
                    break
                  case 'use':
                    !(function(t, e, r) {
                      var a = t.getAttribute('href') || t.getAttribute('xlink:href')
                      if (a) {
                        var i = a.substring(1)
                        r.getRendered(i)
                        var n = et.getFormObject(i),
                          s = it(t, 'x') || 0,
                          o = it(t, 'y') || 0,
                          l = it(t, 'width') || n.width,
                          h = it(t, 'height') || n.height,
                          f = new et.Matrix(l / n.width || 0, 0, 0, h / n.height || 0, s, o)
                        ;(f = et.matrixMult(f, e)), et.doFormObject(i, f)
                      }
                    })(t, o, r)
                    break
                  case 'line':
                    i ||
                      (et.setCurrentTransformationMatrix(o),
                      (function(t, e, r) {
                        var a = [
                            parseFloat(t.getAttribute('x1') || 0),
                            parseFloat(t.getAttribute('y1') || 0)
                          ],
                          i = [
                            parseFloat(t.getAttribute('x2') || 0),
                            parseFloat(t.getAttribute('y2') || 0)
                          ]
                        null !== r.stroke && et.line(a[0], a[1], i[0], i[1])
                        var n = it(t, 'marker-start'),
                          s = it(t, 'marker-end')
                        if (n || s) {
                          var o = new pt(),
                            l = K(a, i)
                          n && o.addMarker(new xt(rt.exec(n)[1], a, l)),
                            s && o.addMarker(new xt(rt.exec(s)[1], i, l)),
                            o.draw(et.unitMatrix, e, r)
                        }
                      })(t, r, n))
                    break
                  case 'rect':
                    i || et.setCurrentTransformationMatrix(o),
                      (function(t) {
                        var e = parseFloat(it(t, 'width')),
                          r = parseFloat(it(t, 'height'))
                        !isFinite(e) ||
                          e <= 0 ||
                          !isFinite(r) ||
                          r <= 0 ||
                          et.roundedRect(
                            parseFloat(it(t, 'x')) || 0,
                            parseFloat(it(t, 'y')) || 0,
                            e,
                            r,
                            parseFloat(it(t, 'rx')) || 0,
                            parseFloat(it(t, 'ry')) || 0
                          )
                      })(t)
                    break
                  case 'ellipse':
                    i || et.setCurrentTransformationMatrix(o),
                      (function(t) {
                        var e = parseFloat(it(t, 'rx')),
                          r = parseFloat(it(t, 'ry'))
                        !isFinite(e) ||
                          e <= 0 ||
                          !isFinite(r) ||
                          r <= 0 ||
                          et.ellipse(
                            parseFloat(it(t, 'cx')) || 0,
                            parseFloat(it(t, 'cy')) || 0,
                            e,
                            r
                          )
                      })(t)
                    break
                  case 'circle':
                    i || et.setCurrentTransformationMatrix(o),
                      (function(t) {
                        var e = parseFloat(it(t, 'r'))
                        !isFinite(e) ||
                          e <= 0 ||
                          et.ellipse(
                            parseFloat(it(t, 'cx')) || 0,
                            parseFloat(it(t, 'cy')) || 0,
                            e,
                            e
                          )
                      })(t)
                    break
                  case 'text':
                    wt(t, o, 0, 0, n)
                    break
                  case 'path':
                    i || et.setCurrentTransformationMatrix(o),
                      (function(t, A, e, S, r) {
                        var F = J(t),
                          C = it(t, 'marker-end'),
                          I = it(t, 'marker-start'),
                          N = it(t, 'marker-mid')
                        ;(C = C && rt.exec(C)[1]),
                          (I = I && rt.exec(I)[1]),
                          (N = N && rt.exec(N)[1])
                        var a = (function() {
                          for (
                            var t,
                              e,
                              r,
                              a,
                              i,
                              n,
                              s,
                              o,
                              l,
                              h,
                              f = 0,
                              c = 0,
                              u = f,
                              d = c,
                              p = [],
                              x = new pt(),
                              g = [0, 0],
                              v = 0;
                            v < F.numberOfItems;
                            v++
                          ) {
                            var m = F.getItem(v),
                              b = m.pathSegTypeAsLetter
                            switch (b) {
                              case 'M':
                                ;(u = f), (d = c), (i = [m.x, m.y]), (l = 'm')
                                break
                              case 'm':
                                ;(u = f), (d = c), (i = [m.x + f, m.y + c]), (l = 'm')
                                break
                              case 'L':
                                ;(i = [m.x, m.y]), (l = 'l')
                                break
                              case 'l':
                                ;(i = [m.x + f, m.y + c]), (l = 'l')
                                break
                              case 'H':
                                ;(i = [m.x, c]), (l = 'l'), (r = m.x), (a = c)
                                break
                              case 'h':
                                ;(i = [m.x + f, c]), (l = 'l'), (r = m.x + f), (a = c)
                                break
                              case 'V':
                                ;(i = [f, m.y]), (l = 'l'), (r = f), (a = m.y)
                                break
                              case 'v':
                                ;(i = [f, m.y + c]), (l = 'l'), (r = f), (a = m.y + c)
                                break
                              case 'C':
                                ;(s = [m.x1, m.y1]), (o = [m.x2, m.y2]), (i = [m.x, m.y])
                                break
                              case 'c':
                                ;(s = [m.x1 + f, m.y1 + c]),
                                  (o = [m.x2 + f, m.y2 + c]),
                                  (i = [m.x + f, m.y + c])
                                break
                              case 'S':
                                ;(s = ct(v, [f, c], F, t, e)), (o = [m.x2, m.y2]), (i = [m.x, m.y])
                                break
                              case 's':
                                ;(s = ct(v, [f, c], F, t, e)),
                                  (o = [m.x2 + f, m.y2 + c]),
                                  (i = [m.x + f, m.y + c])
                                break
                              case 'Q':
                                ;(n = [m.x1, m.y1]),
                                  (s = ft([f, c], n)),
                                  (o = ft([m.x, m.y], n)),
                                  (i = [m.x, m.y])
                                break
                              case 'q':
                                ;(n = [m.x1 + f, m.y1 + c]),
                                  (s = ft([f, c], n)),
                                  (o = ft([f + m.x, c + m.y], n)),
                                  (i = [m.x + f, m.y + c])
                                break
                              case 'T':
                                ;(n = ct(v, [f, c], F, t, e)),
                                  (s = ft([f, c], n)),
                                  (o = ft([m.x, m.y], n)),
                                  (i = [m.x, m.y])
                                break
                              case 't':
                                ;(n = ct(v, [f, c], F, t, e)),
                                  (s = ft([f, c], n)),
                                  (o = ft([f + m.x, c + m.y], n)),
                                  (i = [m.x + f, m.y + c])
                                break
                              case 'Z':
                              case 'z':
                                ;(f = u), (c = d), p.push({ op: 'h' })
                            }
                            var y =
                                I &&
                                (1 === v ||
                                  ('mM'.indexOf(b) < 0 &&
                                    0 <= 'mM'.indexOf(F.getItem(v - 1).pathSegTypeAsLetter))),
                              k =
                                C &&
                                (v === F.numberOfItems - 1 ||
                                  ('mM'.indexOf(b) < 0 &&
                                    0 <= 'mM'.indexOf(F.getItem(v + 1).pathSegTypeAsLetter))),
                              w =
                                N &&
                                0 < v &&
                                !(
                                  1 === v && 0 <= 'mM'.indexOf(F.getItem(v - 1).pathSegTypeAsLetter)
                                )
                            if (0 <= 'sScCqQtT'.indexOf(b))
                              y && x.addMarker(new xt(I, [f, c], K([f, c], s))),
                                k && x.addMarker(new xt(C, i, K(o, i))),
                                w &&
                                  ((h = lt([f, c], s)),
                                  (h =
                                    0 <= 'mM'.indexOf(F.getItem(v - 1).pathSegTypeAsLetter)
                                      ? h
                                      : ot(ht(g, h))),
                                  x.addMarker(new xt(N, [f, c], Math.atan2(h[1], h[0])))),
                                (g = lt(o, i)),
                                (t = f),
                                (e = c),
                                S && ((s = vt(s, A)), (o = vt(o, A)), (i = vt(i, A))),
                                p.push({ op: 'c', c: [s[0], s[1], o[0], o[1], i[0], i[1]] })
                            else if (0 <= 'lLhHvVmM'.indexOf(b)) {
                              if (
                                ((h = lt([f, c], i)),
                                y && x.addMarker(new xt(I, [f, c], Math.atan2(h[1], h[0]))),
                                k && x.addMarker(new xt(C, i, Math.atan2(h[1], h[0]))),
                                w)
                              ) {
                                var M =
                                  0 <= 'mM'.indexOf(b)
                                    ? g
                                    : 0 <= 'mM'.indexOf(F.getItem(v - 1).pathSegTypeAsLetter)
                                    ? h
                                    : ot(ht(g, h))
                                x.addMarker(new xt(N, [f, c], Math.atan2(M[1], M[0])))
                              }
                              ;(g = h), S && (i = vt(i, A)), p.push({ op: l, c: i })
                            }
                            0 <= 'MLCSQT'.indexOf(b)
                              ? ((f = m.x), (c = m.y))
                              : 0 <= 'mlcsqt'.indexOf(b)
                              ? ((f = m.x + f), (c = m.y + c))
                              : 'zZ'.indexOf(b) < 0 && ((f = r), (c = a))
                          }
                          return { lines: p, markers: x }
                        })()
                        0 < a.lines.length && et.path(a.lines),
                          (C || I || N) && a.markers.draw(et.unitMatrix, e, r)
                      })(t, o, r, i, n)
                    break
                  case 'polygon':
                  case 'polyline':
                    i || et.setCurrentTransformationMatrix(o),
                      (function(t, e, r, a) {
                        if (t.hasAttribute('points') && '' !== t.getAttribute('points')) {
                          var i,
                            n,
                            s = gt(t.getAttribute('points')),
                            o = [{ op: 'm', c: s[0] }]
                          for (i = 1; i < s.length; i++) o.push({ op: 'l', c: s[i] })
                          a && o.push({ op: 'h' }), et.path(o)
                          var l = it(t, 'marker-end'),
                            h = it(t, 'marker-start'),
                            f = it(t, 'marker-mid')
                          if (h || f || l) {
                            var c = o.length,
                              u = new pt()
                            if (
                              (h &&
                                ((h = rt.exec(h)[1]),
                                (n = ht(lt(o[0].c, o[1].c), lt(o[c - 2].c, o[0].c))),
                                u.addMarker(new xt(h, o[0].c, Math.atan2(n[1], n[0])))),
                              f)
                            ) {
                              f = rt.exec(f)[1]
                              var d,
                                p = lt(o[0].c, o[1].c)
                              for (i = 1; i < o.length - 2; i++)
                                (n = ht(p, (d = lt(o[i].c, o[i + 1].c)))),
                                  u.addMarker(new xt(f, o[i].c, Math.atan2(n[1], n[0]))),
                                  (p = d)
                              ;(n = ht(p, (d = lt(o[c - 2].c, o[0].c)))),
                                u.addMarker(new xt(f, o[c - 2].c, Math.atan2(n[1], n[0])))
                            }
                            l &&
                              ((l = rt.exec(l)[1]),
                              (n = ht(lt(o[0].c, o[1].c), lt(o[c - 2].c, o[0].c))),
                              u.addMarker(new xt(l, o[0].c, Math.atan2(n[1], n[0])))),
                              u.draw(et.unitMatrix, e, r)
                          }
                        }
                      })(t, r, n, 'polygon' === t.tagName.toLowerCase())
                    break
                  case 'image':
                    et.setCurrentTransformationMatrix(o),
                      (function(t) {
                        var e = parseFloat(it(t, 'width')),
                          r = parseFloat(it(t, 'height')),
                          a = parseFloat(it(t, 'x') || 0),
                          i = parseFloat(it(t, 'y') || 0)
                        if (!(!isFinite(e) || e <= 0 || !isFinite(r) || r <= 0)) {
                          var n = t.getAttribute('xlink:href') || t.getAttribute('href')
                          if (n) {
                            var s = n.match(at)
                            if (s && 'image/svg+xml' === s[2]) {
                              var o = s[5]
                              o = 'base64' === s[4] ? atob(o) : decodeURIComponent(o)
                              var l = new DOMParser().parseFromString(o, 'image/svg+xml')
                                  .firstElementChild,
                                h = t.getAttribute('preserveAspectRatio')
                              return (
                                (h &&
                                  !(h.indexOf('defer') < 0) &&
                                  l.getAttribute('preserveAspectRatio')) ||
                                  l.setAttribute('preserveAspectRatio', h),
                                l.setAttribute('x', String(a)),
                                l.setAttribute('y', String(i)),
                                l.setAttribute('width', String(e)),
                                l.setAttribute('height', String(r)),
                                Ft(l, et.unitMatrix, new ut(l), !1, !1, dt.default())
                              )
                            }
                            try {
                              et.addImage(n, '', a, i, e, r)
                            } catch (t) {
                              'object' == typeof console &&
                                console.warn &&
                                console.warn(
                                  'svg2pdfjs: Images with external resource link are not supported! ("' +
                                    n +
                                    '")'
                                )
                            }
                          }
                        }
                      })(t)
                }
                nt(t, 'path,rect,ellipse,circle,polygon,polyline') &&
                  !i &&
                  (c && u ? et.fillStroke(d) : c ? et.fill(d) : u ? et.stroke() : et.discardPath()),
                  p ? et.endFormObject(t.getAttribute('id')) : i || et.restoreGraphicsState(),
                  x && et.restoreGraphicsState()
              }
            }
            void 0 !== m && m.exports
              ? ((tt = r('./rgbcolor.js')),
                (f = r('svgpath')),
                (h = r('font-family-papandreou')),
                (i = r('cssesc')),
                (m.exports = e))
              : ((f = t.SvgPath),
                (tt = t.RGBColor),
                (h = t.FontFamily),
                (i = t.cssesc),
                (t.svg2pdf = e),
                (t.svgElementToPdf = e))
          })(
            ('undefined' != typeof self && self) || ('undefined' != typeof window && window) || this
          )
        },
        { './rgbcolor.js': 10, cssesc: 1, 'font-family-papandreou': 2, svgpath: 3 }
      ]
    },
    {},
    [11]
  )(11)
})
//# sourceMappingURL=svg2pdf.min.js.map
